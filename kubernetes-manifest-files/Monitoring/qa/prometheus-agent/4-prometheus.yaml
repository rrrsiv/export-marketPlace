---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: agent
  namespace: monitoring
spec:
  version: v2.39.1
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      component: prometheus-agent
  serviceMonitorNamespaceSelector:
    matchLabels:
      monitoring: prometheus-agent
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 500m
      memory: 1Gi
  replicas: 1
  logLevel: debug
  logFormat: logfmt
  scrapeInterval: 30s
  remoteWrite:
  # TODO: replace with your workspace
  - url: https://aps-workspaces.ap-southeast-1.amazonaws.com/workspaces/ws-3d3a91b9-7b1e-4e4c-ac77-ee310f4956ec/api/v1/remote_write
    sigv4:
      region: ap-southeast-1
    queueConfig:
      maxSamplesPerSend: 1000
      maxShards: 200
      capacity: 2500
  containers:
  - name: prometheus
    args:
    - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
    - --storage.agent.path=/prometheus
    - --enable-feature=agent
    - --web.enable-lifecycle
  # OPTIONAL: only if you have standalone EC2 instances to scare
  # additionalScrapeConfigs:
  #   name: additional-scrape-configs
  #   key: prometheus-additional.yaml
  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: role
  #           operator: In
  #           values:
  #           - general
  #   podAntiAffinity:
  #     preferredDuringSchedulingIgnoredDuringExecution:
  #     - podAffinityTerm:
  #         labelSelector:
  #           matchExpressions:
  #           - key: app.kubernetes.io/name
  #             operator: In
  #             values:
  #             - prometheus
  #         topologyKey: kubernetes.io/hostname
  #       weight: 100
